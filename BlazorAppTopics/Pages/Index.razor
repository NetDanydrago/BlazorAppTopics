@page "/"

<h1>Hello, world!</h1>

<input @bind="@Search" placeholder="Escribe tu consulta" />
<button @onclick="Filter">
    Filtrar
</button>
    <div class="row">
        <div class="col">
            <ul>
                @foreach (var R in Topics)
                {
                    <li>
                        <label>
                            @if (R.IsHasChildren)
                            {
                                <a @onclick="() => { DoSomeThing(R); }">@R.Title</a>
                            }
                            else
                            {
                                <span>@R.Title</span>
                            }
                            <a href="@R.Url">Link</a>
                        </label>
                        @if (R.ListSecondary != null)
                        {
                            <ul>
                                @foreach (var S in R.ListSecondary)
                                {
                                    <li>
                                        <label>
                                            <span>@S.Title</span>
                                            @if (S.IsHasChildren)
                                            {
                                                <button @onclick="() => { DoSomeThing(S);}">Click</button>
                                            }
                                            <a href="@S.Url">Link</a>
                                        </label>
                                        @if (S.ListSecondary != null)
                                        {
                                            <ul>
                                                @foreach (var T in S.ListSecondary)
                                                {
                                                    <li>
                                                        <label>
                                                            <span>@T.Title</span>
                                                            @if (T.IsHasChildren)
                                                            {
                                                                <button @onclick="() => { DoSomeThing(T);}">Click</button>
                                                            }
                                                            <a href="@S.Url">Link</a>
                                                        </label>
                                                        @if (T.ListSecondary != null)
                                                        {
                                                            <ul>
                                                                @foreach (var Q in T.ListSecondary)
                                                                {
                                                                    <li>
                                                                        <label>
                                                                            <span>@Q.Title</span>
                                                                            <a href="@Q.Url">Link</a>
                                                                        </label>
                                                                    </li>
                                                                }
                                                            </ul>
                                                        }
                                                    </li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                }
                            </ul>
                        }
                    </li>
                }
            </ul>
        </div>
    </div>











@code{

    List<Topic> BaseTopics;
    List<Topic> Topics;


    protected override void OnInitialized()
    {
        BaseTopics = Repository.References.ToList().ConvertAll(p => new Topic()
        {
            Id = p.Id,
            ParentId = p.ParentId,
            Title = p.Title,
            Url = p.Url,
            IsHasChildren = true
        });
        Topics = BaseTopics.Where(p => p.ParentId == 0).ToList();
    }




    class Topic
    {
        public int Id { get; set; }
        public int ParentId { get; set; }
        public string Title { get; set; }
        public string Url { get; set; }
        public bool IsHasChildren { get; set; }
        public List<Topic> ListSecondary { get; set; }
        public bool IsOpen { get; set; }
    }

    string Search;


    void DoSomeThing(Topic p)
    {
        if (p.IsOpen)
        {
            p.ListSecondary = default;
            p.IsOpen = false;
        }
        else
        {
            p.ListSecondary = BaseTopics.Where(c => c.ParentId == p.Id).ToList();
            if(p.ListSecondary.Count > 0)
            {
                p.IsOpen = true;
            }
            else
            {
                p.IsHasChildren = false;
            }

        }
    }




    void Filter()
    {
        Topics = BaseTopics.Where(r => r.Title.Contains(Search)).ToList();
    }
}
