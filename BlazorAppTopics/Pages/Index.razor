@page "/"

<div class="autocomplete">
    <input @bind="@Search" id="myInput" @bind:event="oninput" type="text" @onfocus="() => { BaseTopics = GetTopics(); }" name="myCountry" placeholder="Busqueda">
</div>


@if (Topics != null)
{
    <div class="row">
        <div class="col">
            <ul>
                @foreach (var LevelTopicOne in Topics)
                {
                    <li>
                        <label>
                            @if (LevelTopicOne.IsHasChildren)
                            {
                                <a @onclick="() => { GetChildrenTopic(LevelTopicOne); }" style="cursor:pointer;">
                                    <i class="fa fa-angle-right @(LevelTopicOne.IsOpen? "itemOpen":"itemClose")" aria-hidden="true"/>    
                                     @LevelTopicOne.Title</a>
                            }
                            else
                            {
                                <span>@LevelTopicOne.Title</span>
                            }
                        <a href="@LevelTopicOne.Url" target="_blank">
                            <i class="fa fa-external-link" aria-hidden="true"/>
                        </a>
                        </label>
                        @if (LevelTopicOne.ChildrenList != null)
                        {
                            <ul>
                                @foreach (var LevelTopicTwo in LevelTopicOne.ChildrenList)
                                {
                                    <li>
                                        <label>
                                            @if (LevelTopicTwo.IsHasChildren)
                                            {
                                                <a @onclick="() => { GetChildrenTopic(LevelTopicTwo); }" style="cursor:pointer;">
                                                    <i class="fa fa-angle-right @(LevelTopicTwo.IsOpen? "itemOpen":"itemClose")" aria-hidden="true" />
                                                    @LevelTopicTwo.Title
                                                </a>
                                            }
                                            else
                                            {
                                                <span>@LevelTopicTwo.Title</span>
                                            }
                                        <a href="@LevelTopicTwo.Url" target="_blank">
                                            <i class="fa fa-external-link" aria-hidden="true" />
                                        </a>
                                        </label>
                                        @if (LevelTopicTwo.ChildrenList != null)
                                        {
                                            <ul>
                                                @foreach (var LevelTopicTree in LevelTopicTwo.ChildrenList)
                                                {
                                                    <li>
                                                        <label>
                                                            @if (LevelTopicTree.IsHasChildren)
                                                            {
                                                                <a @onclick="() => { GetChildrenTopic(LevelTopicTree); }" style="cursor:pointer;">
                                                                    <i class="fa fa-angle-right @(LevelTopicTree.IsOpen? "itemOpen":"itemClose")" aria-hidden="true" /> 
                                                                    @LevelTopicTree.Title
                                                                </a>
                                                            }
                                                            else
                                                            {
                                                                <span>@LevelTopicTree.Title</span>
                                                            }
                                                        <a href="@LevelTopicTree.Url" target="_blank">
                                                            <i class="fa fa-external-link" aria-hidden="true" />
                                                        </a>
                                                        </label>
                                                        @if (LevelTopicTree.ChildrenList != null)
                                                        {
                                                            <ul>
                                                                @foreach (var LevelTopicFour in LevelTopicTree.ChildrenList)
                                                                {
                                                                    <li>
                                                                        <label>
                                                                            @if (LevelTopicFour.IsHasChildren)
                                                                            {
                                                                                <a @onclick="() => { GetChildrenTopic(LevelTopicFour); }" style="cursor:pointer;">
                                                                                    <i class="fa fa-angle-right @(LevelTopicFour.IsOpen? "itemOpen":"itemClose")" aria-hidden="true" />
                                                                                    @LevelTopicFour.Title
                                                                                </a>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span>@LevelTopicFour.Title</span>
                                                                            }
                                                                        <a href="@LevelTopicFour.Url" target="_blank">
                                                                            <i class="fa fa-external-link" aria-hidden="true" />
                                                                        </a>
                                                                        </label>
                                                                        @if (LevelTopicFour.ChildrenList != null)
                                                                        {
                                                                            <ul>
                                                                                @foreach (var LevelTopicFive in LevelTopicFour.ChildrenList)
                                                                                {
                                                                                    <li>
                                                                                        <label>
                                                                                            <span>@LevelTopicFive.Title </span>
                                                                                            <a href="@LevelTopicFive.Url" target="_blank">
                                                                                                <i class="fa fa-external-link" aria-hidden="true" />
                                                                                            </a>
                                                                                        </label>
                                                                                    </li>
                                                                                }
                                                                            </ul>
                                                                        }
                                                                    </li>
                                                                }
                                                            </ul>
                                                        }
                                                    </li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                }
                            </ul>
                        }
                    </li>
                }
            </ul>
        </div>
    </div>
}










@code{

    List<Topic> BaseTopics;
    List<Topic> Topics;
    List<Topic> TopicsComplete;
    event Action OnInputSearch;
    private string BFSearch;
    public string Search { get { return BFSearch; } set { BFSearch = value; OnInputSearch?.Invoke(); } }

    protected override void OnInitialized()
    {
        BaseTopics = GetTopics();
        Topics = BaseTopics.Where(d => d.ParentId == 0).ToList();
        Topics.ForEach(d => {
            d.IsHasChildren = BaseTopics.Any(i => i.ParentId == d.Id);
        });
        TopicsComplete = BaseTopics;
        OnInputSearch += Filter;
    }

    List<Topic> GetTopics()
    {
        return Repository.References.ToList().ConvertAll(p => new Topic()
        {
            Id = p.Id,
            ParentId = p.ParentId,
            Title = p.Title,
            Url = p.Url,
        });
    }

    void GetParentTopic(int id)
    {
        if (id != 0)
        {
            var topic = Topics.Where(d => d.Id == id).FirstOrDefault();
            if(topic == null)
            {
                topic = TopicsComplete.Where(d => d.Id == id).FirstOrDefault();
                if (topic == null)
                {
                    topic = BaseTopics.Where(d => d.Id == id).FirstOrDefault();
                    TopicsComplete.Add(topic);
                }
            }
            GetParentTopic(topic.ParentId);
        }
    }

    void Filter()
    {
        TopicsComplete = new List<Topic>();
        Topics = new List<Topic>();
        if (!string.IsNullOrEmpty(BFSearch))
        {
            Topics = BaseTopics.Where(r => r.Title.ToLower().Contains(BFSearch.ToLower())).ToList();
            foreach (var D in Topics)
            {
                GetParentTopic(D.ParentId);
            }
            TopicsComplete.AddRange(Topics);
            Topics = TopicsComplete.Where(d => d.ParentId == 0).ToList();
            Topics.ForEach(d =>
            {
                d.IsHasChildren = TopicsComplete.Any(i => i.ParentId == d.Id);
            });
        }
        else
        {
            Topics = BaseTopics.Where(p => p.ParentId == 0).ToList();
            TopicsComplete = BaseTopics;
        }
    }


    void GetChildrenTopic(Topic p)
    {
        if (p.IsOpen)
        {
            p.ChildrenList = default;
            p.IsOpen = false;
        }
        else
        {
            p.ChildrenList = TopicsComplete.Where(c => c.ParentId == p.Id).ToList();
            p.ChildrenList.ForEach(d =>
            {
                d.IsHasChildren = TopicsComplete.Any(i => i.ParentId == d.Id);
            });
            if (p.ChildrenList.Count > 0)
            {
                p.IsOpen = true;
            }
        }
    }

}
